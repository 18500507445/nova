<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nova.pay.mapper.FkPayOrderMapper">

    <resultMap type="com.nova.pay.entity.result.FkPayOrder" id="FkPayOrderResult">
        <result property="id" column="id"/>
        <result property="payConfigId" column="pay_config_id"/>
        <result property="productId" column="product_id"/>
        <result property="userName" column="user_name"/>
        <result property="orderId" column="order_id"/>
        <result property="tradeNo" column="trade_no"/>
        <result property="tradeStatus" column="trade_status"/>
        <result property="fee" column="fee"/>
        <result property="type" column="type"/>
        <result property="payWay" column="pay_way"/>
        <result property="sign" column="sign"/>
        <result property="remark" column="remark"/>
        <result property="source" column="source"/>
        <result property="sid" column="sid"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="operator" column="operator"/>
    </resultMap>

    <sql id="selectFkPayOrderVo">
        select id,
               pay_config_id,
               product_id,
               user_name,
               order_id,
               trade_no,
               trade_status,
               fee,
               type,
               pay_way,
               sign,
               remark,
               source,
               sid,
               create_time,
               update_time,
               operator
        from fk_pay_order
    </sql>

    <select id="selectFkPayOrderList" parameterType="com.nova.pay.entity.result.FkPayOrder" resultMap="FkPayOrderResult">
        <include refid="selectFkPayOrderVo"/>
        <where>
            <if test="payConfigId != null "> and pay_config_id = #{payConfigId}</if>
            <if test="userName != null  and userName != ''"> and user_name = #{userName}</if>
            <if test="orderId != null  and orderId != ''"> and order_id = #{orderId}</if>
            <if test="tradeNo != null  and tradeNo != ''"> and trade_no = #{tradeNo}</if>
            <if test="tradeStatus != null "> and trade_status = #{tradeStatus}</if>
            <if test="fee != null "> and fee = #{fee}</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="payWay != null "> and pay_way = #{payWay}</if>
            <if test="sign != null  and sign != ''"> and sign = #{sign}</if>
            <if test="source != null  and source != ''"> and source = #{source}</if>
            <if test="sid != null  and sid != ''"> and sid = #{sid}</if>
            <if test="operator != null  and operator != ''"> and operator = #{operator}</if>
        </where>
    </select>

    <select id="selectFkPayOrderById" parameterType="Long" resultMap="FkPayOrderResult">
        <include refid="selectFkPayOrderVo"/>
        where id = #{id}
    </select>

    <insert id="insertFkPayOrder" parameterType="com.nova.pay.entity.result.FkPayOrder" useGeneratedKeys="true" keyProperty="id">
        insert into fk_pay_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payConfigId != null">pay_config_id,</if>
            <if test="productId != null">product_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="orderId != null and orderId != ''">order_id,</if>
            <if test="tradeNo != null">trade_no,</if>
            <if test="tradeStatus != null">trade_status,</if>
            <if test="fee != null">fee,</if>
            <if test="type != null">type,</if>
            <if test="payWay != null">pay_way,</if>
            <if test="sign != null">sign,</if>
            <if test="remark != null">remark,</if>
            <if test="source != null">source,</if>
            <if test="sid != null">sid,</if>
            <if test="operator != null">operator,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payConfigId != null">#{payConfigId},</if>
            <if test="productId != null">#{productId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="orderId != null and orderId != ''">#{orderId},</if>
            <if test="tradeNo != null">#{tradeNo},</if>
            <if test="tradeStatus != null">#{tradeStatus},</if>
            <if test="fee != null">#{fee},</if>
            <if test="type != null">#{type},</if>
            <if test="payWay != null">#{payWay},</if>
            <if test="sign != null">#{sign},</if>
            <if test="remark != null">#{remark},</if>
            <if test="source != null">#{source},</if>
            <if test="sid != null">#{sid},</if>
            <if test="operator != null">#{operator},</if>
        </trim>
    </insert>

    <update id="updateFkPayOrder" parameterType="com.nova.pay.entity.result.FkPayOrder">
        update fk_pay_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="productId != null and productId != ''">product_id = #{productId},</if>
            <if test="tradeNo != null">trade_no = #{tradeNo},</if>
            <if test="tradeStatus != null">trade_status = #{tradeStatus},</if>
            <if test="fee != null">fee = #{fee},</if>
            <if test="type != null">type = #{type},</if>
            <if test="sign != null">sign = #{sign},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="operator != null">operator = #{operator},</if>
        </trim>
        where order_id = #{orderId}
    </update>

    <delete id="deleteFkPayOrderById" parameterType="Long">
        delete from fk_pay_order where id = #{id}
    </delete>

    <delete id="deleteFkPayOrderByIds" parameterType="String">
        delete from fk_pay_order where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectNtPayOrderByOrderIdAndPayWay" resultMap="FkPayOrderResult">
        <include refid="selectFkPayOrderVo"/>
        where order_id = #{orderId} and pay_way = #{payWay}
    </select>

</mapper>