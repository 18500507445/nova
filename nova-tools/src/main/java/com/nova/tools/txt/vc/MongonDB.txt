MongonDB

{"mobile" : {$gt:"15014245370"}}


Stream<Map<String, Object>> mapStream = sourceList.stream().map(new Function<Map<String, Object>, Map<String, Object>>() {
            @Override
            public Map<String, Object> apply(Map<String, Object> map) {

                    String goodsOrderId = MapDataUtil.getString(map, "goods_order_id");
                    lastId.setA(goodsOrderId);
                    map.put("_id", goodsOrderId);

                    String goodsCount = goodsIdMap.get(goodsOrderId);
                    map.put("goods_Count", goodsCount);


                    Date buyTime = MapDataUtil.getDate(map, "create_time");
                    if (buyTime != null) {
                        String format = DateUtil.format(DF.YYYYMMDD, buyTime);
                        if (format.startsWith("2")) {
                            int buyDay = Integer.parseInt(format);
                            map.put("create_time_yyyymmdd", buyDay);
                            map.put("create_time_yyyymm", buyDay / 100);
                            map.put("create_time_yyyy", buyDay / 10000);
                        }
                    }
                    return map;

            }
        });
		
		

主查询使用hipiao库：

####影院建立礼品卡 (影院名称、影院编码、创建数量、上架数量)
select c.cname 影院名称, c.cinemacode 影院编码,COUNT(p.id) 创建数量,SUM(IF(p.publish=1,1,0)) 上架数量
 from vc_product p INNER JOIN hp_cinema_info c ON p.cinema_id = c.id
 where p.category=8 AND to_days(p.create_time)=to_days(now()) GROUP BY p.id;



####礼品卡售卖 (卡名称、影院名称、影院编码、卡状态（上架、下架）、已售卖、已绑卡、已使用、已退款、累计销售金额、累计抵扣票款金额)
SELECT vp.id,vp.pname 卡名称, hci.cname 影院名称, hci.cinemacode 影院编码, 
CASE WHEN vp.publish=0 OR vp.publish=4 THEN '待上架' WHEN vp.publish=1 THEN '上架' WHEN vp.publish=2 THEN '下架' WHEN vp.publish=3 THEN '已导出' END 卡状态,
COUNT(sgso.sub_order_no) 已售卖,
(SELECT SUM(IF(cs.member_relation_id>0,1,0)) FROM marketdb.card_storage cs WHERE cs.product_id = vp.id) 已绑卡,
(SELECT SUM(IF(cs.`status`=3,1,0)) FROM marketdb.card_storage cs WHERE cs.product_id = vp.id) 已使用,
SUM(IF(sgsos.payment_status=3 ,sgso.payment_price,0)) 已退款,
SUM(sgso.payment_price) 累计销售金额
FROM vc_product vp 
INNER JOIN hp_cinema_info hci ON vp.cinema_id = hci.id
LEFT JOIN sale_goods_sub_order sgso on vp.id = sgso.product_id
LEFT JOIN sale_goods_sub_order_success sgsos on sgsos.sub_order_no = sgso.sub_order_no
where vp.category=8 AND to_days(sgso.create_time)=to_days(now()) GROUP BY vp.id;



累计抵扣票款金额：使用marketdb库中的gift_usage_log表和hipiao库中的sale_ticket_order和sale_ticket_order_success进行关联查询	



####礼品卡售卖 (卡名称、影院名称、影院编码、卡状态（上架、下架）、已售卖、已绑卡、已使用、已退款、累计销售金额、累计抵扣票款金额)
card_name:卡名称
cinema_name：影院名称
cinema_code：影院编码
create_number：创建数量
putaway_number:上架数量
card_status_number：卡状态（上架，下架）
already_sell_number：已售卖
tied_card_number：已绑卡
already_use_number：已使用
refund_money：已退款金额
market_money：累计销售金额



SELECT vp.id,vp.pname AS card_name, hci.cname AS cinema_name, hci.cinemacode AS cinema_code, count(vp.id) AS create_number, SUM(IF(vp.publish=1,1,0)) AS putaway_number,
CASE WHEN vp.publish=0 OR vp.publish=4 THEN '待上架' WHEN vp.publish=1 THEN '上架' WHEN vp.publish=2 THEN '下架' WHEN vp.publish=3 THEN '已导出' END AS card_status_number,
COUNT(sgso.sub_order_no) AS already_sell_number,
(SELECT SUM(IF(cs.member_relation_id>0,1,0)) FROM marketdb.card_storage cs WHERE cs.product_id = vp.id) AS tied_card_number,
(SELECT SUM(IF(cs.`status`=3,1,0)) FROM marketdb.card_storage cs WHERE cs.product_id = vp.id) AS already_use_number,
SUM(IF(sgsos.payment_status=3 ,sgso.payment_price,0)) AS refund_money,
SUM(sgso.payment_price) AS market_money
FROM vc_product vp 
INNER JOIN hp_cinema_info hci ON vp.cinema_id = hci.id
LEFT JOIN sale_goods_sub_order sgso on vp.id = sgso.product_id
LEFT JOIN sale_goods_sub_order_success sgsos on sgsos.sub_order_no = sgso.sub_order_no
where vp.category=8 AND to_days(sgso.create_time)=to_days(now()) GROUP BY vp.id;























	