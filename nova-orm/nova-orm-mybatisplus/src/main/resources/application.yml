#端口
server:
  port: 8080
  servlet:
    context-path: /

##德鲁伊连接池
spring:
  datasource:
    dynamic:
      primary: study
      # 不使用严格模式
      strict: false
      datasource:
        study:
          # 可以不设置，默认德鲁伊
          type: com.alibaba.druid.pool.DruidDataSource
          username: root
          password: ENC(HfT5aVyvqAy4l4hfdoz6f1Ik+Pt7+d1A/XtxdfNv4oHMZsxUWvfFqAB0heosM8l4)
          url: jdbc:mysql://47.100.174.176:3306/study?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
          driver-class-name: com.mysql.cj.jdbc.Driver
          druid:
            # 初始连接数
            initialSize: 20
            # 最小连接数
            minIdle: 20
            # 最大连接数
            maxActive: 50
            # 获取连接时最大等待时间，单位：毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
            maxWait: 60000
            # （最后再加测试）创建连接时的socket最大读超时，单位：毫秒，默认0表示永远等待，配置成10000则表示db操作如果在10秒内未返回应答，将抛出异常，工作原理是在创建连接时将该值设置到对应数据库驱动的属性信息中由其JDBC驱动进行控制
            socketTimeout: 60000
            # （最后再加测试）新增的控制创建连接时的socket连接最大等待超时，单位：毫秒，默认0表示永远等待，工作原理是在创建连接时将该值设置到对应数据库驱动的属性信息中由其JDBC驱动进行控制
            connectTimeout: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位：毫秒
            minEvictableIdleTimeMillis: 1800000
            # 用来检测连接是否有效的sql，要求是一个查询语句
            validationQuery: SELECT 1 FROM DUAL
            # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
            testWhileIdle: true
            # （先测试这个）申请连接时执行validationQuery检测连接是否有效，会降低性能，一般情况下都可以开启，只有性能要求极其高且连接使用很频繁的情况下才有必要禁用
            testOnBorrow: true
            # 归还连接时执行validationQuery检测连接是否有效，会降低性能，这个一般不需要开启。
            testOnReturn: false
            # （先测试这个）连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。实际项目中建议配置成true
            keepAlive: true

            # 打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
            maxPoolPreparedStatementPerConnectionSize: 100

            # 监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
            filters: stat,wall
            # mergeSql作用是对于相同的 SQL 语句,Druid 会合并统计数据
            # 当某条 SQL 语句的执行时间超过这个阈值时,Druid 就会将其记录为"慢 SQL"
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        shopping:
          username: root
          password: ENC(HfT5aVyvqAy4l4hfdoz6f1Ik+Pt7+d1A/XtxdfNv4oHMZsxUWvfFqAB0heosM8l4)
          url: jdbc:mysql://47.100.174.176:3306/shopping?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
          driver-class-name: com.mysql.cj.jdbc.Driver
          druid:
            initialSize: 5
            minIdle: 5
            maxActive: 20
            maxWait: 6000
            timeBetweenEvictionRunsMillis: 60000
            minEvictableIdleTimeMillis: 300000
            validationQuery: SELECT 1 FROM DUAL
            testWhileIdle: true
            testOnBorrow: true
            testOnReturn: false
            keepAlive: true
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 20
            filters: stat,wall
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  #关闭spring启动图
  main:
    banner-mode: off

mybatis-plus:
  global-config:
    #关闭mybatis-plus启动图
    banner: false
  configuration:
    #打印log
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #数据库 下划线命名映射小驼峰命名 user_name --> userName
    map-underscore-to-camel-case: true


jasypt:
  encryptor:
    algorithm: PBEWITHHMACSHA512ANDAES_256
    password: jaspyt_password


# pagehelper相关配置 可参考https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md
pagehelper:
  # 数据库方言 mysql
  helperDialect: mysql
  # 分页参数合理化，默认是false
  # 启用合理化时，如果pageNum < 1会查询第一页，如果pageNum > pages会查询最后一页；
  # 禁用合理化时，如果pageNum < 1 或 pageNum > pages会返回空数据
  reasonable: true
  # 支持通过Mapper接口参数来传递分页参数，默认值false
  supportMethodsArguments: true
  # 为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值
  # 默认值countSql
  params: count=countSql

  # 是否自动检测dialect
  autoDialect: true
  # 多数据源时，是否自动检测dialect
  autoRuntimeDialect: true